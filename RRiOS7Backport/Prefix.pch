//
//  Prefix header for all source files of the 'RRiOS7Backport' target in the 'RRiOS7Backport' project
//
//  Created by Rolandas Razma on 13/06/2013.
//  Copyright (c) 2013 Rolandas Razma.
//
//
//  This code is distributed under the terms and conditions of the MIT license.
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//


#ifdef __OBJC__
    #import <Availability.h>
    #if !__has_feature(objc_arc) && !COCOAPODS
        #error This library requires automatic reference counting
    #endif

    #import <objc/runtime.h>

    #import <Foundation/Foundation.h>
    #import <UIKit/UIKit.h>

	#import "NSArray.h"
	#import "NSTimer.h"
	#import "NSData.h"

	#import "GKLocalPlayer.h"

	#import "UIView.h"
#endif


#define RR_ADD_INSTANCE_METHOD(__CLASS__, __ORIG_SELECTOR__, __NEW_SELECTOR__) {                                                            \
    Method newInstanceMethod = class_getInstanceMethod(__CLASS__, __NEW_SELECTOR__);                                                        \
    class_addMethod(__CLASS__, __ORIG_SELECTOR__, method_getImplementation(newInstanceMethod), method_getTypeEncoding(newInstanceMethod));  \
}


#define RR_ADD_CLASS_METHOD(__CLASS__, __ORIG_SELECTOR__, __NEW_SELECTOR__) {                                                               \
    Class metaClass = objc_getMetaClass(class_getName(__CLASS__));                                                                          \
    Method newMethod = class_getClassMethod(__CLASS__, __NEW_SELECTOR__);                                                                   \
    class_addMethod(metaClass, __ORIG_SELECTOR__, method_getImplementation(newMethod), method_getTypeEncoding(newMethod));                  \
}
